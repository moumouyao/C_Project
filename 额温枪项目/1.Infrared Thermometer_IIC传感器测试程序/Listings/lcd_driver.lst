C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD_DRIVER
OBJECT MODULE PLACED IN .\Objects\lcd_driver.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE api\lcd_driver.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\api;.\stc8_lib) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\lcd_driver.lst) TABS(2) OBJECT(.\Objects\lcd_driver.obj)

line level    source

   1          #include "lcd_driver.h"
   2          #include "tim.h"
   3          
   4          u16 LCD_Color = BLACK;
   5          u16 LCD_BackColor = WHITE;
   6          
   7          /******************************************************************************
   8                函数说明：LCD串行数据写入函数
   9                入口数据：dat  要写入的串行数据
  10                返回值：  无
  11          ******************************************************************************/
  12          void LCD_Writ_Bus(u8 dat) 
  13          { 
  14   1        u8 i;       
  15   1        for(i=0;i<8;i++)
  16   1        {       
  17   2          OLED_SCLK_Clr();
  18   2          if(dat&0x80)
  19   2             OLED_SDIN_Set();
  20   2          else 
  21   2             OLED_SDIN_Clr();
  22   2          OLED_SCLK_Set();
  23   2          dat<<=1;   
  24   2        }     
  25   1      }
  26          
  27          
  28          /******************************************************************************
  29                函数说明：LCD写入数据
  30                入口数据：dat 写入的数据
  31                返回值：  无
  32          ******************************************************************************/
  33          void LCD_WR_DATA8(u8 dat)
  34          {
  35   1        OLED_DC_Set();//写数据
  36   1        LCD_Writ_Bus(dat);
  37   1      }
  38          
  39          
  40          /******************************************************************************
  41                函数说明：LCD写入数据
  42                入口数据：dat 写入的数据
  43                返回值：  无
  44          ******************************************************************************/
  45          void LCD_WR_DATA(u16 dat)
  46          {
  47   1        OLED_DC_Set();//写数据
  48   1        LCD_Writ_Bus(dat>>8);
  49   1        LCD_Writ_Bus(dat);
  50   1      }
  51          
  52          
  53          /******************************************************************************
  54                函数说明：LCD写入命令
C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 2   

  55                入口数据：dat 写入的命令
  56                返回值：  无
  57          ******************************************************************************/
  58          void LCD_WR_REG(u8 dat)
  59          {
  60   1        OLED_DC_Clr();//写命令
  61   1        LCD_Writ_Bus(dat);
  62   1      }
  63          
  64          
  65          void LCD_GPIOConfig(void)
  66          {
  67   1        //管脚全部拉高，释放总线
  68   1        OLED_SCLK_Set();OLED_SDIN_Set();OLED_RST_Set();
  69   1        OLED_DC_Set();OLED_CS_Clr();
  70   1        //关闭背光
  71   1        OLED_BLK_Clr();
  72   1      }
  73          
  74          void LCD_Config(void)
  75          {
  76   1        OLED_RST_Clr();
  77   1        delay_ms(200);
  78   1        OLED_RST_Set();
  79   1        delay_ms(20);
  80   1        OLED_BLK_Set();
  81   1        
  82   1        //************* Start Initial Sequence **********// 
  83   1        LCD_WR_REG(0x36);
  84   1        if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x00);
  85   1        else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC0);
  86   1        else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x70);
  87   1        else LCD_WR_DATA8(0xA0);
  88   1      
  89   1        LCD_WR_REG(0x3A); 
  90   1        LCD_WR_DATA8(0x05);
  91   1        LCD_WR_REG(0xB2);
  92   1        LCD_WR_DATA8(0x0C);
  93   1        LCD_WR_DATA8(0x0C);
  94   1        LCD_WR_DATA8(0x00);
  95   1        LCD_WR_DATA8(0x33);
  96   1        LCD_WR_DATA8(0x33); 
  97   1        LCD_WR_REG(0xB7); 
  98   1        LCD_WR_DATA8(0x35);  
  99   1        LCD_WR_REG(0xBB);
 100   1        LCD_WR_DATA8(0x19);
 101   1        LCD_WR_REG(0xC0);
 102   1        LCD_WR_DATA8(0x2C);
 103   1        LCD_WR_REG(0xC2);
 104   1        LCD_WR_DATA8(0x01);
 105   1        LCD_WR_REG(0xC3);
 106   1        LCD_WR_DATA8(0x12);   
 107   1        LCD_WR_REG(0xC4);
 108   1        LCD_WR_DATA8(0x20);  
 109   1        LCD_WR_REG(0xC6); 
 110   1        LCD_WR_DATA8(0x0F);    
 111   1        LCD_WR_REG(0xD0); 
 112   1        LCD_WR_DATA8(0xA4);
 113   1        LCD_WR_DATA8(0xA1);
 114   1        LCD_WR_REG(0xE0);
 115   1        LCD_WR_DATA8(0xD0);
 116   1        LCD_WR_DATA8(0x04);
C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 3   

 117   1        LCD_WR_DATA8(0x0D);
 118   1        LCD_WR_DATA8(0x11);
 119   1        LCD_WR_DATA8(0x13);
 120   1        LCD_WR_DATA8(0x2B);
 121   1        LCD_WR_DATA8(0x3F);
 122   1        LCD_WR_DATA8(0x54);
 123   1        LCD_WR_DATA8(0x4C);
 124   1        LCD_WR_DATA8(0x18);
 125   1        LCD_WR_DATA8(0x0D);
 126   1        LCD_WR_DATA8(0x0B);
 127   1        LCD_WR_DATA8(0x1F);
 128   1        LCD_WR_DATA8(0x23);
 129   1        LCD_WR_REG(0xE1);
 130   1        LCD_WR_DATA8(0xD0);
 131   1        LCD_WR_DATA8(0x04);
 132   1        LCD_WR_DATA8(0x0C);
 133   1        LCD_WR_DATA8(0x11);
 134   1        LCD_WR_DATA8(0x13);
 135   1        LCD_WR_DATA8(0x2C);
 136   1        LCD_WR_DATA8(0x3F);
 137   1        LCD_WR_DATA8(0x44);
 138   1        LCD_WR_DATA8(0x51);
 139   1        LCD_WR_DATA8(0x2F);
 140   1        LCD_WR_DATA8(0x1F);
 141   1        LCD_WR_DATA8(0x1F);
 142   1        LCD_WR_DATA8(0x20);
 143   1        LCD_WR_DATA8(0x23);
 144   1        LCD_WR_REG(0x21); 
 145   1        LCD_WR_REG(0x11); 
 146   1        LCD_WR_REG(0x29);
 147   1      }
 148          
 149          void LCD_Init(void)
 150          {
 151   1        LCD_GPIOConfig();
 152   1        LCD_Config();
 153   1        LCD_Clear(WHITE);
 154   1        //打开背光
 155   1        OLED_BLK_Set();
 156   1      }
 157          
 158          /******************************************************************************
 159                函数说明：设置起始和结束地址
 160                入口数据：x1,x2 设置列的起始和结束地址
 161                          y1,y2 设置行的起始和结束地址
 162                返回值：  无
 163          ******************************************************************************/
 164          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
 165          {
 166   1        if(USE_HORIZONTAL==1)
 167   1        {
 168   2          LCD_WR_REG(0x2a);//列地址设置
 169   2          LCD_WR_DATA(x1);
 170   2          LCD_WR_DATA(x2);
 171   2          LCD_WR_REG(0x2b);//行地址设置
 172   2          LCD_WR_DATA(y1+80);
 173   2          LCD_WR_DATA(y2+80);
 174   2          LCD_WR_REG(0x2c);//储存器写
 175   2        }
 176   1        //把适配代码去掉，省内存
 177   1      //  if(USE_HORIZONTAL==0)
 178   1      //  {
C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 4   

 179   1      //    LCD_WR_REG(0x2a);//列地址设置
 180   1      //    LCD_WR_DATA(x1);
 181   1      //    LCD_WR_DATA(x2);
 182   1      //    LCD_WR_REG(0x2b);//行地址设置
 183   1      //    LCD_WR_DATA(y1);
 184   1      //    LCD_WR_DATA(y2);
 185   1      //    LCD_WR_REG(0x2c);//储存器写
 186   1      //  }
 187   1      //  else if(USE_HORIZONTAL==1)
 188   1      //  {
 189   1      //    LCD_WR_REG(0x2a);//列地址设置
 190   1      //    LCD_WR_DATA(x1);
 191   1      //    LCD_WR_DATA(x2);
 192   1      //    LCD_WR_REG(0x2b);//行地址设置
 193   1      //    LCD_WR_DATA(y1+80);
 194   1      //    LCD_WR_DATA(y2+80);
 195   1      //    LCD_WR_REG(0x2c);//储存器写
 196   1      //  }
 197   1      //  else if(USE_HORIZONTAL==2)
 198   1      //  {
 199   1      //    LCD_WR_REG(0x2a);//列地址设置
 200   1      //    LCD_WR_DATA(x1);
 201   1      //    LCD_WR_DATA(x2);
 202   1      //    LCD_WR_REG(0x2b);//行地址设置
 203   1      //    LCD_WR_DATA(y1);
 204   1      //    LCD_WR_DATA(y2);
 205   1      //    LCD_WR_REG(0x2c);//储存器写
 206   1      //  }
 207   1      //  else
 208   1      //  {
 209   1      //    LCD_WR_REG(0x2a);//列地址设置
 210   1      //    LCD_WR_DATA(x1+80);
 211   1      //    LCD_WR_DATA(x2+80);
 212   1      //    LCD_WR_REG(0x2b);//行地址设置
 213   1      //    LCD_WR_DATA(y1);
 214   1      //    LCD_WR_DATA(y2);
 215   1      //    LCD_WR_REG(0x2c);//储存器写
 216   1      //  }
 217   1      }
 218          /******************************************************************************
 219                函数说明：LCD清屏函数
 220                入口数据：无
 221                返回值：  无
 222          ******************************************************************************/
 223          void LCD_Clear(u16 Color)
 224          {
 225   1        u16 i,j;    
 226   1        LCD_Address_Set(0,0,LCD_W-1,LCD_H-1);
 227   1        for(i=0;i<LCD_W;i++)
 228   1        {
 229   2          for (j=0;j<LCD_H;j++)
 230   2          {
 231   3            LCD_WR_DATA(Color);        
 232   3          }
 233   2        }
 234   1      }
 235          
 236          
 237          
 238          //void LCD_DrewPoint(u16 x,u16 y,u16 color)
 239          //{
 240          //  LCD_Address_Set(x,y,1,1);
C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 5   

 241          //  LCD_WR_DATA(color); 
 242          //}
 243          
 244          
 245          
 246          
 247          extern code unsigned char zf_8_16[][16];
 248          void LCD_ShowString(u16 x, u16 y, u16 fc, u16 bc, u8 *p)
 249          {
 250   1        u16 i=0, j=0;
 251   1        u8 temp = 0;
 252   1        while(*p != '\0') {
 253   2          LCD_Address_Set(x, y, x+8-1, y+16-1);
 254   2          x+=8;
 255   2          if(x > (LCD_W-8)) {
 256   3            x = 0;
 257   3            y +=16;
 258   3          }   
 259   2          for(i=0; i<16; i++) {//一个字体字模16字节
 260   3            temp = zf_8_16[(*p)-' '][i];
 261   3            for(j=0; j<8; j++) {
 262   4              if(temp & (0x01<<(7-j)))
 263   4                LCD_WR_DATA(fc);
 264   4              else 
 265   4                LCD_WR_DATA(bc);
 266   4            }
 267   3          }
 268   2          p++;
 269   2        }
 270   1      }
 271          
 272          
 273          extern code unsigned char smg_32_64[][256];
 274          void LCD_ShowSmg(u16 x, u16 y, u16 fc, u16 bc, u8 *p)
 275          {
 276   1        u16 i=0, j=0;
 277   1        u8 temp = 0;
 278   1        while(*p != '\0') {
 279   2          LCD_Address_Set(x, y, x+32-1, y+64-1);
 280   2          x+=32;
 281   2          if(x > (LCD_W-32)) {
 282   3            x = 0;
 283   3            y +=64;
 284   3          }   
 285   2          for(i=0; i<256; i++) {//一个字体字模256字节
 286   3            if(*p >= '.' && *p <= '9')
 287   3              temp = smg_32_64[(*p)-'.'][i];
 288   3            else
 289   3              temp = smg_32_64[12][i];
 290   3            for(j=0; j<8; j++) {
 291   4              if(temp & (0x01<<(7-j)))
 292   4                LCD_WR_DATA(fc);
 293   4              else 
 294   4                LCD_WR_DATA(bc);
 295   4            }
 296   3          }
 297   2          p++;
 298   2        }
 299   1      }
 300          
 301          
 302          
C51 COMPILER V9.60.0.0   LCD_DRIVER                                                        12/14/2021 11:09:30 PAGE 6   

 303          /*
 304          col -- 开始的列
 305          page - 开始的页
 306          width - 图片的宽度
 307          high -- 图片的高度
 308          p    - 指向要显示的图片数组
 309          */
 310          void LCD_ShowPicture(uint16_t col,uint16_t page,uint16_t width,uint16_t high,uint8_t *p)
 311          {
 312   1        u16 i,j;
 313   1        u16 color = 0;  
 314   1        LCD_Address_Set(col,page,col+width-1,page+high-1);
 315   1        for(i=0;i<width;i++)
 316   1        {
 317   2          for (j=0;j<high;j++)
 318   2          {
 319   3            color = *p<<8 | *(p+1);
 320   3            LCD_WR_DATA(color);
 321   3            p+=2;
 322   3          }
 323   2        }
 324   1      }
 325          
 326          
 327          void LCD_ClearRect(u8 x_start,u8 y_start,u8 width,u8 high,u16 color)
 328          {
 329   1        u16 i,j;    
 330   1        LCD_Address_Set(x_start,y_start,x_start+width-1,y_start+high-1);
 331   1        for(i=0;i<width;i++)
 332   1        {
 333   2          for (j=0;j<high;j++)
 334   2          {
 335   3            LCD_WR_DATA(color);        
 336   3          }
 337   2        }
 338   1      }
 339          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      65
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
