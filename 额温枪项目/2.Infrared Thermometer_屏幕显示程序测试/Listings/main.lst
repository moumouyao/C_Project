C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2023 20:21:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\Keil_5\C51\BIN\C51.EXE api\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\api;.\stc8_lib) DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /***********************************************************************************
   2           * __  ____    __ ______
   3           * \ \/ /\ \  / /|  __  \ 官方网站： www.edu118.com
   4           *  \  /  \_\/_/ | |  \ |         
   5           *  /  \   |  |  | |__/ |         
   6           * /_/\_\  |__|  |______/         
   7           *
   8           * 版权◎深圳信盈达科技有限公司（郑州分部）保留所有权
   9           * 文件名：main.c
  10           * 作者：XYD_HWG
  11           * 版本号：V0.0.4
  12           * 日期：2021年12月11日
  13           * 描述：额温枪实训版本测试代码
  14           * 备注：STC8G2K32S2、系统时钟24MHz、复位引脚可用、串口1波特率9600
  15           * 历史记录：
  16           * 
  17           **********************************************************************************
  18           */ 
  19          
  20          #include "main.h"
  21          #include "ioConfig.h"
  22          #include "tim.h"
  23          #include "uart1.h"
  24          #include "key.h"
  25          #include "mlx90614.h"
  26          #include "lcd_driver.h"
  27          #include "power.h"
  28          #include "stdio.h"
  29          #include "string.h"
  30          
  31          
  32          extern code unsigned char gImage_logo[6264];
  33          extern code unsigned char gImage_beep_off_icon[2592];
  34          extern code unsigned char gImage_beep_on_icon[2592];
  35          extern code unsigned char gImage_history[2592];
  36          extern code unsigned char gImage_alarm[2592];
  37          
  38          typedef enum {
  39            Measure = 0,
  40            Setup = 1,
  41            History = 2,
  42            Silent = 3,
  43          }__MODE_TYPE;
  44          
  45          
  46          code char ModeString[4][16] = {"Measure ", "Setup  ", "History ", "Silent "};
  47          unsigned char Mode = Measure; //模式
  48          float now_temp = 0.0, Threshold = 37.0; //温度和温度阈值
  49          unsigned char keyValue = 0;
  50          char Mantissa[4] = {0}; //温度整数显示缓存区
  51          char Fraction[4] = {0}; //温度小数显示缓存区
  52          char showBuff[20] = {0};  //显示缓存区
  53          volatile unsigned char beepFlag = 1;
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2023 20:21:31 PAGE 2   

  55          
  56          void Mode_Change(unsigned char key);
  57          void View_Show(unsigned char mode);
  58          void Mode_Measure(unsigned char key);
  59          void main()
  60          {
  61   1      
  62   1        IO_Config();
  63   1        Tim0_Config();
  64   1        UartInit();
  65   1        EA = 1;
  66   1        SMBus_Init();
  67   1        LCD_Init();
  68   1        Uart_SendString("hello world\r\n", strlen("hello world\r\n"));
  69   1        LCD_ShowPicture(10, 10, 87, 36, gImage_logo);
  70   1        sprintf(showBuff, "Mode:%s", ModeString[Mode]);
  71   1        LCD_ShowString(70, 200, RED, WHITE, (unsigned char*)showBuff);
  72   1        while(1)
  73   1        {
  74   2          keyValue = Get_KeyValue();
  75   2          Mode_Change(keyValue);
  76   2          Mode_Measure(keyValue);
  77   2          if(Led_TaskTime[0] > Led_TaskTime[1]) {
  78   3            LED ^= 1;
  79   3            Led_TaskTime[0] = 0;
  80   3          }
  81   2          if(View_TaskTime[0] > View_TaskTime[1]) {
  82   3            View_Show(Mode);
  83   3            View_TaskTime[0] = 0;
  84   3          }
  85   2          
  86   2        }
  87   1      }
  88          
  89          //模式切换
  90          void Mode_Change(unsigned char key)
  91          {
  92   1        if(key != 4)  return;
  93   1        Mode++; 
  94   1        Mode %= 4;
  95   1        sprintf(showBuff, "Mode:%s", ModeString[Mode]);
  96   1        LCD_ShowString(70, 200, RED, WHITE, (unsigned char*)showBuff);
  97   1      }
  98          
  99          //测量模式
 100          void Mode_Measure(unsigned char key)
 101          {
 102   1        unsigned char i=0;
 103   1        if(key != 1)  return;
 104   1        Mode = Measure; //测量按键，强制切换模式到测量模式
 105   1        now_temp = 0;
 106   1        OLED_BLK_Set();
 107   1        sprintf(showBuff, "Mode:%s", ModeString[Mode]);
 108   1        LCD_ShowString(70, 200, RED, WHITE, (unsigned char*)showBuff);
 109   1        if(beepFlag == 1) BEEP = 0;
 110   1        for(i=0; i<5; i++) {  //连续采样5次
 111   2          now_temp += SMBus_ReadTemp();
 112   2          Delay_ms(5);
 113   2        }
 114   1        now_temp = now_temp/5;//求取平均值
 115   1        BEEP = 1;
 116   1        now_temp = now_temp+3.5;//修正温度值
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2023 20:21:31 PAGE 3   

 117   1        
 118   1        if(now_temp > 99) now_temp = 99;
 119   1        if(now_temp < 0) now_temp = 0;
 120   1      }
 121          
 122          
 123          //数据显示
 124          void View_Show(unsigned char mode)
 125          {
 126   1        sprintf(Mantissa, "%02d", (int)now_temp);
 127   1        sprintf(Fraction, "%02d", (int)((now_temp-(int)now_temp)*100));
 128   1        sprintf(showBuff, "%s.%s ", Mantissa, Fraction);
 129   1        if(now_temp > Threshold) {//温度过高
 130   2          if(beepFlag == 1) BEEP = 0;
 131   2          LCD_ShowSmg((240-32*5)/2-8, 100, RED, WHITE,(unsigned char*)showBuff);
 132   2          LCD_ShowPicture(160, 10, 36, 36, gImage_alarm);//报警图片
 133   2        }
 134   1        else {//温度正常
 135   2          BEEP = 1;
 136   2          LCD_ShowSmg((240-32*5)/2-8, 100, BLUE,WHITE,(unsigned char*)showBuff);
 137   2          LCD_ClearRect(160, 10, 36, 36, WHITE);
 138   2        }
 139   1      }
*** WARNING C280 IN LINE 124 OF api\main.c: 'mode': unreferenced local variable
 140          
 141          
 142          
 143          
 144          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    830    ----
   CONSTANT SIZE    =     98    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
